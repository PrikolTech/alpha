paths:
  users:
    post:
      tags:
        - user
      operationId: userCreate
      summary: Создать нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateRequest"
      responses:
        201:
          description: Created
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserValidationError"
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "../../common.yml#/components/schemas/DomainError"

    get:
      tags:
        - user
      operationId: userList
      summary: Получить список пользователей
      parameters:
        - $ref: "../../common.yml#/components/parameters/Page"
        - $ref: "../../common.yml#/components/parameters/PerPage"
        - $ref: "../../common.yml#/components/parameters/Sorting"
        - $ref: "#/components/parameters/Email"
        - $ref: "#/components/parameters/FirstName"
        - $ref: "#/components/parameters/MiddleName"
        - $ref: "#/components/parameters/LastName"
        - $ref: "#/components/parameters/CreatedAt"
        - $ref: "#/components/parameters/UpdatedAt"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserValidationError"

components:
  parameters:
    Email:
      name: email
      description: Почтовый адрес
      in: query
      required: false
      schema:
        type: string
    FirstName:
      name: firstName
      description: Имя
      in: query
      required: false
      schema:
        type: string
    MiddleName:
      name: middleName
      description: Отчество
      in: query
      required: false
      schema:
        type: string
    LastName:
      name: lastName
      description: Фамилия
      in: query
      required: false
      schema:
        type: string
    CreatedAt:
      name: createdAt
      description: Дата и время создания
      in: query
      required: false
      schema:
        $ref: "../../common.yml#/components/schemas/DateTimeFilter"
    UpdatedAt:
      name: updatedAt
      description: Дата и время обновления
      in: query
      required: false
      schema:
        $ref: "../../common.yml#/components/schemas/DateTimeFilter"
  schemas:
    UserValidationError:
      type: object
      required:
        - field
        - reason
      properties:
        field:
          type: string
        reason:
          type: string
    UserCreateRequest:
      type: object
      required:
        - email
        - firstName
        - lastName
      properties:
        email:
          type: string
          format: email
        firstName:
          type: string
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
    UserListResponse:
      type: object
      description: Список пользователей
      required:
        - data
        - meta
      properties:
        data:
          type: array
          items:
            $ref: "./common.yml#/components/schemas/User"
        meta:
          $ref: "../../common.yml#/components/schemas/Meta"
