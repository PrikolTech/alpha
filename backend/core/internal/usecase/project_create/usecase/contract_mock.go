// Code generated by MockGen. DO NOT EDIT.
// Source: contract.go
//
// Generated by this command:
//
//	mockgen -package usecase -source contract.go -destination contract_mock.go
//

// Package usecase is a generated GoMock package.
package usecase

import (
	gomock "go.uber.org/mock/gomock"
)

// MockprojectRepo is a mock of projectRepo interface.
type MockprojectRepo struct {
	ctrl     *gomock.Controller
	recorder *MockprojectRepoMockRecorder
}

// MockprojectRepoMockRecorder is the mock recorder for MockprojectRepo.
type MockprojectRepoMockRecorder struct {
	mock *MockprojectRepo
}

// NewMockprojectRepo creates a new mock instance.
func NewMockprojectRepo(ctrl *gomock.Controller) *MockprojectRepo {
	mock := &MockprojectRepo{ctrl: ctrl}
	mock.recorder = &MockprojectRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockprojectRepo) EXPECT() *MockprojectRepoMockRecorder {
	return m.recorder
}
