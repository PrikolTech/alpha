name: Core

defaults:
  run:
    working-directory: "./backend/core"

on:
  push:
    branches: ["*"]
    paths: ["backend/core/**"]

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.4"
          cache-dependency-path: ./backend/core/go.sum

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
          working-directory: ./backend/core

      - name: Build
        run: go build -v ./...

  test:
    needs: build
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:17.2-alpine3.20
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 15432:5432

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Run migrations
        run: find ./migrations/psql -iname "*.sql" | sort | xargs printf -- ' -f %s' | xargs -t psql -d postgresql://testuser:testpassword@localhost:15432/testdb -a -v ON_ERROR_STOP=on

      - name: Set up
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.4"
          cache-dependency-path: ./backend/core/go.sum

      - name: Test
        run: go test -v ./...
        env:
          PGHOST: localhost
          PGPORT: 15432
          PGDATABASE: testdb
          PGUSER: testuser
          PGPASSWORD: testpassword
